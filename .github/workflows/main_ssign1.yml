# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - 519web

# name: Build and deploy ASP.Net Core app to Azure Web App - ssign1

on:
  push:
    branches:
      - main

# env:
#   AZURE_WEBAPP_NAME: ssign1   # set this to your application's name
#   AZURE_WEBAPP_PACKAGE_PATH: 'Node/WEB'      # set this to the path to your web app project, defaults to the repository root
#   NODE_VERSION: '18.x'                # set this to the node version to use

# jobs:
#   build-and-deploy:
#     name: Build and Deploy
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - name: Use Node.js ${{ env.NODE_VERSION }}
#         uses: actions/setup-node@v4
#         with:
#           node-version: ${{ env.NODE_VERSION }}
#           cache: 'npm'
#           cache-dependency-path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/package.json
#       # - name: npm install, build frontend
#       #   run: |
#       #     npm install
#       #     npm run build
#       #   working-directory: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/frontend
#       - name: npm install, build, and test
#         run: npm install
#         working-directory: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
#       - name: 'Deploy to Azure WebApp'
#         uses: azure/webapps-deploy@v3
#         with: 
#           app-name: ${{ env.AZURE_WEBAPP_NAME }}
#           publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
#           package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}



# on:
#   push:
#     branches:
#       - main

# env:
#   AZURE_WEBAPP_NAME: ssign1   # set this to your application's name
#   AZURE_WEBAPP_PACKAGE_PATH: '/Node/WEB/'      # set this to the path to your web app project, defaults to the repository root
#   NODE_VERSION: '18.x'                # set this to the node version to use

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4

#     - name: Set up Node.js
#       uses: actions/setup-node@v3
#       with:
#         node-version: ${{ env.NODE_VERSION }}

#     - name: npm install, build, and test
#       run: |
#         npm install
#         npm run build --if-present
#     - name: Upload artifact for deployment job
#       uses: actions/upload-artifact@v4
#       with:
#         name: node-app
#         path: .

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build
#     environment:
#       name: 'production'
#       url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

#     steps:
#     - name: Download artifact from build job
#       uses: actions/download-artifact@v4
#       with:
#         name: node-app

#     - name: 'Deploy to Azure WebApp'
#       id: deploy-to-webapp 
#       uses: azure/webapps-deploy@85270a1854658d167ab239bce43949edb336fa7c
#       with:
#         app-name: ${{ env.AZURE_WEBAPP_NAME }}
#         publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
#         package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}




# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# jobs:
#   build:
#     runs-on: windows-latest

#     steps:
#       - uses: actions/checkout@v4

#       - name: Set up .NET Core
#         uses: actions/setup-dotnet@v1
#         with:
#           dotnet-version: '7.x'
#           include-prerelease: true

#       - name: Build with dotnet
#         run: dotnet build C_Sharp/WEB --configuration Release

#       - name: dotnet publish
#         run: dotnet publish C_Sharp/WEB -c Release -o ${{env.DOTNET_ROOT}}/myapp

#       - name: Upload artifact for deployment job
#         uses: actions/upload-artifact@v3
#         with:
#           name: .net-app
#           path: ${{env.DOTNET_ROOT}}/myapp

#   deploy:
#     runs-on: windows-latest
#     needs: build
#     environment:
#       name: 'Production'
#       url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
#     permissions:
#       id-token: write #This is required for requesting the JWT


#     steps:
#       - name: Download artifact from build job
#         uses: actions/download-artifact@v3
#         with:
#           name: .net-app

#       - name: Deploy to Azure Web App
#         id: deploy-to-webapp
#         uses: azure/webapps-deploy@v2
#         with:
#           app-name: 'ssign1'
#           slot-name: 'Production'
#           publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_BCCAD667891341408809B03F78F94981 }}
#           package: .



env:
  AZURE_WEBAPP_NAME: ssign1 # set this to your application's name
  WEBAPP_PACKAGE_PATH: 'Node/WEB' # set this to the path to your web app project, defaults to the repository root
  FRONTEND_PACKAGE_PATH: 'Node/WEB/frontend' # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '18.x' # set this to the node version to use
permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{env.NODE_VERSION}}
        cache: 'npm'
        cache-dependency-path: './Node/WEB/package.json'

    - name: npm install, build, and test
      working-directory: '${{env.WEBAPP_PACKAGE_PATH}}'
      run: |
        npm install
    - name: npm install react frontend
      working-directory: './${{env.FRONTEND_PACKAGE_PATH}}'
      run: |
        npm install
        npm run build
        rm -r public
        rm -r node_modules
        rm -r src
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: node-app
        path: .

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: node-app
    - name: 'Deploy to Azure WebApp'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.WEBAPP_PACKAGE_PATH }}